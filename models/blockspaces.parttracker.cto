/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace blockspaces.parttracker

/**
 * Participant Section
 */

abstract participant PartTrackerParticipant identified by participantKey {
  o String participantKey
  o String name
  o String orgName 
}

participant Manufacturer extends PartTrackerParticipant {
}

participant Insurance extends PartTrackerParticipant {
}

participant Mechanic extends PartTrackerParticipant {
}

participant Regulator extends PartTrackerParticipant {
}

participant PlantOwner extends PartTrackerParticipant {
}

participant CertifyingOracle extends PartTrackerParticipant {
}

/**
 * Asset Section
 */

 asset Part identified by partID {
   o String partID
   o String partName
   o String partNumber
   o String partSN
   o Double price
   -->Manufacturer manufacturer
   o CertificationStatus certStatus default='PENDING'
   -->Certificate certificate
 }

 concept OrderEntry {
   -->Part part
   o Integer qty
 }

 asset Order identified by orderNumber {
   o String orderNumber
   o OrderEntry[] orderEntries
   -->PlantOwner buyer
 }

 asset Certificate identified by certId {
   o String certId
   -->Regulator certIssuer
 }

 asset MaintenanceTask identified by taskId {
   o String taskId
   -->Part[] parts
   -->Mechanic mechanic
   o MaintenanceStatus status default='PENDING'

 }
 enum CertificationStatus {
   o PENDING
   o APPROVED
   o DENIED
 }
 enum MaintenanceStatus {
   o PENDING
   o COMPLETE
 }

/**
 * Event Section
 */

event PartCertRequested {
  -->Part part
  -->CertifyingOracle certifier
}

event PartCertAppoved {
  -->Part part
  -->CertifyingOracle certifier
}

event PartCertDenied {
  -->Part part
  -->CertifyingOracle certifier
}

event PartsOrdered {
  -->Part[] parts
  -->PlantOwner buyer
}

event PartsInstalled {
  -->Part[] parts
  -->Mechanic mechanic
}

/**
 * Transaction Section
 */

 transaction RequestPartCertification {
   -->Part part
   -->CertifyingOracle certifier
 }

 transaction ApprovePartCertification {
   -->Part part
   -->CertifyingOracle certifier
 }

 transaction DenyPartCertification {
   -->Part part
   -->CertifyingOracle certifier
 }

transaction OrderParts {
   o OrderEntry[] orderEntries
   -->PlantOwner buyer
 }

 transaction InstallParts {
   -->Part part
   -->PlantOwner buyer
 }